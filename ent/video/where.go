// Code generated by ent, DO NOT EDIT.

package video

import (
	"AltTube-Go/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldTitle, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldDescription, v))
}

// UploadDate applies equality check predicate on the "upload_date" field. It's identical to UploadDateEQ.
func UploadDate(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploadDate, v))
}

// Uploader applies equality check predicate on the "uploader" field. It's identical to UploaderEQ.
func Uploader(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploader, v))
}

// UploaderURL applies equality check predicate on the "uploader_url" field. It's identical to UploaderURLEQ.
func UploaderURL(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploaderURL, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldDeletedAt, v))
}

// ThumbnailURL applies equality check predicate on the "thumbnail_url" field. It's identical to ThumbnailURLEQ.
func ThumbnailURL(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldThumbnailURL, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Video {
	return predicate.Video(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldTitle, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Video {
	return predicate.Video(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldDescription, v))
}

// UploadDateEQ applies the EQ predicate on the "upload_date" field.
func UploadDateEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploadDate, v))
}

// UploadDateNEQ applies the NEQ predicate on the "upload_date" field.
func UploadDateNEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldUploadDate, v))
}

// UploadDateIn applies the In predicate on the "upload_date" field.
func UploadDateIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldUploadDate, vs...))
}

// UploadDateNotIn applies the NotIn predicate on the "upload_date" field.
func UploadDateNotIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldUploadDate, vs...))
}

// UploadDateGT applies the GT predicate on the "upload_date" field.
func UploadDateGT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldUploadDate, v))
}

// UploadDateGTE applies the GTE predicate on the "upload_date" field.
func UploadDateGTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldUploadDate, v))
}

// UploadDateLT applies the LT predicate on the "upload_date" field.
func UploadDateLT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldUploadDate, v))
}

// UploadDateLTE applies the LTE predicate on the "upload_date" field.
func UploadDateLTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldUploadDate, v))
}

// UploaderEQ applies the EQ predicate on the "uploader" field.
func UploaderEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploader, v))
}

// UploaderNEQ applies the NEQ predicate on the "uploader" field.
func UploaderNEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldUploader, v))
}

// UploaderIn applies the In predicate on the "uploader" field.
func UploaderIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldUploader, vs...))
}

// UploaderNotIn applies the NotIn predicate on the "uploader" field.
func UploaderNotIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldUploader, vs...))
}

// UploaderGT applies the GT predicate on the "uploader" field.
func UploaderGT(v string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldUploader, v))
}

// UploaderGTE applies the GTE predicate on the "uploader" field.
func UploaderGTE(v string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldUploader, v))
}

// UploaderLT applies the LT predicate on the "uploader" field.
func UploaderLT(v string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldUploader, v))
}

// UploaderLTE applies the LTE predicate on the "uploader" field.
func UploaderLTE(v string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldUploader, v))
}

// UploaderContains applies the Contains predicate on the "uploader" field.
func UploaderContains(v string) predicate.Video {
	return predicate.Video(sql.FieldContains(FieldUploader, v))
}

// UploaderHasPrefix applies the HasPrefix predicate on the "uploader" field.
func UploaderHasPrefix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasPrefix(FieldUploader, v))
}

// UploaderHasSuffix applies the HasSuffix predicate on the "uploader" field.
func UploaderHasSuffix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasSuffix(FieldUploader, v))
}

// UploaderEqualFold applies the EqualFold predicate on the "uploader" field.
func UploaderEqualFold(v string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldUploader, v))
}

// UploaderContainsFold applies the ContainsFold predicate on the "uploader" field.
func UploaderContainsFold(v string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldUploader, v))
}

// UploaderURLEQ applies the EQ predicate on the "uploader_url" field.
func UploaderURLEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUploaderURL, v))
}

// UploaderURLNEQ applies the NEQ predicate on the "uploader_url" field.
func UploaderURLNEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldUploaderURL, v))
}

// UploaderURLIn applies the In predicate on the "uploader_url" field.
func UploaderURLIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldUploaderURL, vs...))
}

// UploaderURLNotIn applies the NotIn predicate on the "uploader_url" field.
func UploaderURLNotIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldUploaderURL, vs...))
}

// UploaderURLGT applies the GT predicate on the "uploader_url" field.
func UploaderURLGT(v string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldUploaderURL, v))
}

// UploaderURLGTE applies the GTE predicate on the "uploader_url" field.
func UploaderURLGTE(v string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldUploaderURL, v))
}

// UploaderURLLT applies the LT predicate on the "uploader_url" field.
func UploaderURLLT(v string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldUploaderURL, v))
}

// UploaderURLLTE applies the LTE predicate on the "uploader_url" field.
func UploaderURLLTE(v string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldUploaderURL, v))
}

// UploaderURLContains applies the Contains predicate on the "uploader_url" field.
func UploaderURLContains(v string) predicate.Video {
	return predicate.Video(sql.FieldContains(FieldUploaderURL, v))
}

// UploaderURLHasPrefix applies the HasPrefix predicate on the "uploader_url" field.
func UploaderURLHasPrefix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasPrefix(FieldUploaderURL, v))
}

// UploaderURLHasSuffix applies the HasSuffix predicate on the "uploader_url" field.
func UploaderURLHasSuffix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasSuffix(FieldUploaderURL, v))
}

// UploaderURLEqualFold applies the EqualFold predicate on the "uploader_url" field.
func UploaderURLEqualFold(v string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldUploaderURL, v))
}

// UploaderURLContainsFold applies the ContainsFold predicate on the "uploader_url" field.
func UploaderURLContainsFold(v string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldUploaderURL, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Video {
	return predicate.Video(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Video {
	return predicate.Video(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Video {
	return predicate.Video(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Video {
	return predicate.Video(sql.FieldNotNull(FieldUpdatedAt))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Video {
	return predicate.Video(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Video {
	return predicate.Video(sql.FieldNotNull(FieldDeletedAt))
}

// ThumbnailURLEQ applies the EQ predicate on the "thumbnail_url" field.
func ThumbnailURLEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldEQ(FieldThumbnailURL, v))
}

// ThumbnailURLNEQ applies the NEQ predicate on the "thumbnail_url" field.
func ThumbnailURLNEQ(v string) predicate.Video {
	return predicate.Video(sql.FieldNEQ(FieldThumbnailURL, v))
}

// ThumbnailURLIn applies the In predicate on the "thumbnail_url" field.
func ThumbnailURLIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldIn(FieldThumbnailURL, vs...))
}

// ThumbnailURLNotIn applies the NotIn predicate on the "thumbnail_url" field.
func ThumbnailURLNotIn(vs ...string) predicate.Video {
	return predicate.Video(sql.FieldNotIn(FieldThumbnailURL, vs...))
}

// ThumbnailURLGT applies the GT predicate on the "thumbnail_url" field.
func ThumbnailURLGT(v string) predicate.Video {
	return predicate.Video(sql.FieldGT(FieldThumbnailURL, v))
}

// ThumbnailURLGTE applies the GTE predicate on the "thumbnail_url" field.
func ThumbnailURLGTE(v string) predicate.Video {
	return predicate.Video(sql.FieldGTE(FieldThumbnailURL, v))
}

// ThumbnailURLLT applies the LT predicate on the "thumbnail_url" field.
func ThumbnailURLLT(v string) predicate.Video {
	return predicate.Video(sql.FieldLT(FieldThumbnailURL, v))
}

// ThumbnailURLLTE applies the LTE predicate on the "thumbnail_url" field.
func ThumbnailURLLTE(v string) predicate.Video {
	return predicate.Video(sql.FieldLTE(FieldThumbnailURL, v))
}

// ThumbnailURLContains applies the Contains predicate on the "thumbnail_url" field.
func ThumbnailURLContains(v string) predicate.Video {
	return predicate.Video(sql.FieldContains(FieldThumbnailURL, v))
}

// ThumbnailURLHasPrefix applies the HasPrefix predicate on the "thumbnail_url" field.
func ThumbnailURLHasPrefix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasPrefix(FieldThumbnailURL, v))
}

// ThumbnailURLHasSuffix applies the HasSuffix predicate on the "thumbnail_url" field.
func ThumbnailURLHasSuffix(v string) predicate.Video {
	return predicate.Video(sql.FieldHasSuffix(FieldThumbnailURL, v))
}

// ThumbnailURLEqualFold applies the EqualFold predicate on the "thumbnail_url" field.
func ThumbnailURLEqualFold(v string) predicate.Video {
	return predicate.Video(sql.FieldEqualFold(FieldThumbnailURL, v))
}

// ThumbnailURLContainsFold applies the ContainsFold predicate on the "thumbnail_url" field.
func ThumbnailURLContainsFold(v string) predicate.Video {
	return predicate.Video(sql.FieldContainsFold(FieldThumbnailURL, v))
}

// HasLikeVideos applies the HasEdge predicate on the "like_videos" edge.
func HasLikeVideos() predicate.Video {
	return predicate.Video(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, LikeVideosTable, LikeVideosColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLikeVideosWith applies the HasEdge predicate on the "like_videos" edge with a given conditions (other predicates).
func HasLikeVideosWith(preds ...predicate.LikeVideo) predicate.Video {
	return predicate.Video(func(s *sql.Selector) {
		step := newLikeVideosStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Video) predicate.Video {
	return predicate.Video(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Video) predicate.Video {
	return predicate.Video(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Video) predicate.Video {
	return predicate.Video(sql.NotPredicates(p))
}
